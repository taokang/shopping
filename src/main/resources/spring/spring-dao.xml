<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 配置整合mybatis过程 -->
    <!-- 1.配置数据库相关参数properties的属性：${url} -->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!-- 2.数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- c3p0连接池的私有属性 -->
        <property name="maxPoolSize" value="30" />
        <property name="minPoolSize" value="10" />
        <!--<property name="initialPoolSize" value="10"/>-->
        <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="false" />
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="10000" />
        <!-- 当获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="2" />
    </bean>

    <!-- 3.配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!-- 扫描entity包 使用别名 -->
        <property name="typeAliasesPackage" value="com.imooc.o2o.entity" />
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
    </bean>

    <!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
<!--    注入需要扫描的包，它会自动扫描
这个包下的接口，然后实现这些接口，
并且会实例化这些接口的实现类,org.mybatis.spring.mapper.MapperScannerConfigurer这个类很重要-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.imooc.o2o.dao" />
    </bean>

    <!--    <bean id="master" parent="abstractDataSource">
            &lt;!&ndash; 配置连接池属性 &ndash;&gt;
            <property name="driverClass" value="${jdbc.driver}" />
            <property name="jdbcUrl" value="${jdbc.master.url}" />
            <property name="user" value="${jdbc.username}" />
            <property name="password" value="${jdbc.password}" />
        </bean>-->
<!--    <bean id="slave" parent="abstractDataSource">
        &lt;!&ndash; 配置连接池属性 &ndash;&gt;
        <property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.slave.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>-->
    <!-- 配置动态数据源，这儿targetDataSources就是路由数据源所对应的名称 -->
<!--    <bean id="dynamicDataSource" class="com.imooc.o2o.dao.split.DynamicDataSource">
        <property name="targetDataSources">
            <map>
                <entry value-ref="master" key="master"></entry>
                <entry value-ref="slave" key="slave"></entry>
            </map>
        </property>
    </bean>-->
<!--    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource">
            <ref bean="dynamicDataSource" />
        </property>
    </bean>-->

    <!-- 3.配置SqlSessionFactory对象 -->
<!--    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        &lt;!&ndash; 注入数据库连接池 &ndash;&gt;
        <property name="dataSource" ref="dataSource" />
        &lt;!&ndash; 配置MyBaties全局配置文件:mybatis-config.xml &ndash;&gt;
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        &lt;!&ndash; 扫描entity包 使用别名 &ndash;&gt;
        <property name="typeAliasesPackage" value="com.imooc.entity" />
        &lt;!&ndash; 扫描sql配置文件:mapper需要的xml文件 &ndash;&gt;
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
    </bean>-->

    <!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
<!--    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        &lt;!&ndash; 注入sqlSessionFactory &ndash;&gt;
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        &lt;!&ndash; 给出需要扫描Dao接口包 &ndash;&gt;
        <property name="basePackage" value="com.imooc.o2o.dao" />
    </bean>-->
</beans>